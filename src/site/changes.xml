<?xml version="1.0"?>
<!-- 
 -->

<document>
  <properties>
    <title>Changes</title>
  </properties>
  <body>
    <release version="2.2.2" date="2006-08-18" description="Fix">
      <action dev="zepernick" type="fix">Fixed bug in LargeDataSet.  Multiline delimited records were not being parsed correctly.  They were showing
	up as errors when being parsed.</action>
    </release>
    <release version="2.2.1" date="2006-08-12" description="Fix">
      <action dev="zepernick" type="fix">Fixed a bug in the delimited parser.  Errors were caused by multiple column multi-line records.  Special thanks
	to Malcolm Dobson for bringing the bug to attention and providing the fix.</action>
    </release>
    <release version="2.2.0" date="2006-06-11" description="Fix">
      <action dev="zepernick" type="fix">When using column names out of the CSV file 2 input streams were being created.  One to read the file and
	the other to get the column names.  This has been reduced to one.</action>
      <action dev="zepernick" type="add">Added a new constructor to have the ability to provide an InputStream when reading columns from the file.</action>
      <action dev="zepernick" type="add">Added a LargeDataSet class.  This should be used to read large files.  It provides the ability to read large
	files without reading them into memory.  The following methods are not applicable for this class;
	previous(), writeToExcel, orderRows(), absolute(), remove(), getIndex(), goBottom(), goTop(),
	setValue().  An exception will be thrown if these are called.</action>
      <action dev="zepernick" type="add">Added the ability to specify Header, Trailer, or other records which can be uniquly identified by a piece
	of data on the record.  These get mapped to their own set of column names seperate from the detail records.
	See the documentation included in the download for details on the new options in the mapping file.
      </action>
      <action dev="zepernick" type="add">Added setDebug(boolean) to PZMapParser class.  When flagged true, the Parser will spit the results of the XML
	parse to the console
      </action>
      <action dev="zepernick" type="add">Added 2 new samples; CSVHeaderAndTrailer, FixedLengthHeaderAndTrailer.</action>
    </release>

    <release version="2.1.0" date="2006-02-26" description="Maintenance">
      <action dev="zepernick" type="fix">A VERY Special Thanks to Roland Klein for contributing the following enchancements:
	<br/>- Ability to read a file from an InputStream, File object support still exists.  This enhancement makes pzfilereader
	Java Web Start friendly :)
	
	<br/>- Added a method in ParserUtils to create an InputStream from a File object.
	
	<br/>- Changed all ArrayLists and Vectors to List objects.  This affects the getErrors() method which was returning
	a Vector.  This may potentially cause compilation errors if migrating from a previous version..</action>
      <action dev="zepernick" type="add">Implemented Roland's changed in cvs HEAD</action>
      <action dev="zepernick" type="fix">Removed constructors deprecated in 2.0.0</action>
      <action dev="zepernick" type="add">Added ability to parse delimited file which have records spanning multiple lines in the file.  The element
	which is breaking to the next line must be qualified.  The data can be qualified with any char, a double quote
	is used in the example.
	
	ie. 	element, element, "element with line break
			more element data
			more element data
			more element data"
			start next rec here
      </action>
      <action dev="zepernick" type="add">Begining to write some simple Junit tests under com.test.*  These will be excluded from the production jar.      
      </action>
      <action dev="zepernick" type="add">Added getRowCount() method.  This returns the total amount of rows parsed from the file.  Rows which had errors
	during the parse are excluded from this count and are added to the error collection.
      </action>
      <action dev="zepernick" type="add">Added getReaderVersion() method.  This will return a String representation for the pzFileReader version being used.
      </action>
      <action dev="zepernick" type="add">Added ability to transform a DataSet into excel.  This utilizes JExcelApi which can be found here:
	http://sourceforge.net/projects/jexcelapi. The jxl.jar has been included in the download for your convience and must be on the classpath if using this
	new method --> writeToExcel(File) in the DataSet class
      </action>
      <action dev="zepernick" type="add">Changed examples to work with 2.1.0.  Some examples still refered to depricated constructors from 2.0.0 which have
	been removed in this version.
      </action>
      <action dev="zepernick" type="add">Added 2 new examples to demonstrate the export to Excel and the parsing of multiline records.
      </action>
      <action dev="zepernick" type="add">Updated Java Docs.
      </action>
    </release>

    <release version="2.0.0" date="2005-11-27" description="Maintenance">
      <action dev="zepernick" type="add">Re-coded the way the MetaData was being stored.  It was being duplicated for every row in the file.  It is now only being stored 
    once for the entire file.  This will drastically reduce memory usage.
      </action>
      <action dev="zepernick" type="add">Created a ParserUtils class.  This class can be used to perform low level reads if needed (no mapping file required).
    For now, this change only applies to delimited files.
      </action>
      <action dev="zepernick" type="add">Changed the delimited file parser to use a StringBuffer.  It was performing a lot of String concatinations which could have been
    bogging down performance, and creating un-necessary overhead.
      </action>
      <action dev="zepernick" type="add">created ANT build build file, and published to CVS
      </action>
      <action dev="zepernick" type="add">Removed the use of the Column object.  This was able to cut down on the parse time.
      </action>
      <action dev="zepernick" type="add">Add patch provided by Luke Driscoll [1371162].  This provides 2 new constructors for fixed length files.  There is a boolean
    that can now be passed which will tell the parser to allow lines which are shorter then the allowed line length for a record.
    Missing columns will be filled in with empties.
      </action>
      <action dev="zepernick" type="add">The following objects in the DataSet are now public; rows, errors, columnMD, empty constructor.
	This allows for the DataSet class to be extended if needed to provide custom functionality.
      </action>
      <action dev="zepernick" type="add">Took patch [1371162] a step further and also implemented for delimited files.  If the row is missing any columns, the parser
	will automatically add the columns in as empty's.  This functionality happens only when the handleShortLines parameter is set 
	to true.
      </action>
      <action dev="zepernick" type="add">Revamped user documenation.  The user documenation is now much more detailed.  User documentation and Java Docs are now
	included with the distribution instead of having them in seperate downloads.
      </action>
    </release>
    <release version="1.0.5" date="2005-10-01" description="Maintenance">
      <action dev="zepernick" type="fix">Fixed bug in delimited parse.  If the last column of the last column of the file was empty, the row was being logged to the
    "errors" collection.  Thank you very much to Luke Driscoll who found this bug and submitted the patch.  See bug 
    [ 1275910 ] CSV File with blank last column, for more information.
      </action>
      <action dev="zepernick" type="fix">While fixing bug 1275910, a couple of other bugs were brought to light.  Spaces before or after the delimiter with a text qualifier
    was breaking the parse.  Example...assuming comma as delimter and double quote as the text qualifier. "value1" , "value2" ,"value"
      </action>
      <action dev="zepernick" type="add">Added new method, freeMemory(), when called, the DataSet is cleared.
      </action>
      <action dev="zepernick" type="add">Updated examples and JavaDocs.
      </action>
    </release>
    <release version="1.0.4" date="2005-07-20" description="Maintenance">
      <action dev="zepernick" type="fix">Fixed bug in delimited parse.  If parsing a delimited file with text qualifiers, and the last column of a
		line had hard spaces at the end, a string out of bounds exception was being thrown.
      </action>
      <action dev="zepernick" type="fix">Added setStrictNumericParse(boolean) method.  This is defaulted to false.  When calling getDouble or getInt 
		on a column, all non numeric chars will be striped before performing the parse.  If the column is empty after 		the strip, it will be returned as 0.  Setting this to true will parse all numeric values as is.
      </action>
    </release>

    <release version="1.0.3" date="2005-05-02" description="Maintenance">
      <action dev="zepernick" type="add">added methods to set data in DataSet to all lower or all upper case setLowerCase(), setUpperCase()
      </action>
      <action dev="zepernick" type="add">Changed the OrderBy class to make sure the elements being compared were the same case, so as not to make
		case a factor when comparing.  If they are not the same case elements are converted to lower before 		comparing.
      </action>
      <action dev="zepernick" type="add">Added setLowerCase() and setUpperCase() to Java Docs
      </action>
      <action dev="zepernick" type="add">Added JSP example to samples
      </action>
    </release>

    <release version="1.0.2" date="2005-01-27" description="Maintenance">
      <action dev="zepernick" type="add">Changed parsing logic for delimited files with text qualifiers.  The parser will now parse lines that are qualified
		and not qualified.  For example:
		<br/>"here",1234,"test",50,test	
		<br/>This will now parse into 5 seperate columns.  However if the text contains a delimiter or seperator inside the text, it must be qualified to work correctly.
      </action>
    </release>

    <release version="1.0.1" date="2005-01-23" description="Maintenance">
      <action dev="zepernick" type="fix">Fixed bug in delimted parse.  If no elements were found in a line, a string index out of bounds exception was thrown.
      </action>
      <action dev="zepernick" type="fix">Added getDate(String,SimpleDateFormat).  By default, the current getDate(String) method
		was expecting the date in yyyyMMdd format.  This method allows for another date format to be
		specified.  This format should match the format in the text file.  If you would like to change the
		formating of the date after it is returned from the DataSet, you can use SimpleDateFormat.format(Date)
      </action>
      <action dev="zepernick" type="fix">Corrected javadocs for the getDate methods.  Had return type of double, changed to Date.
      </action>
      <action dev="zepernick" type="fix">Added samples
      </action>
    </release>

  </body>
</document>
